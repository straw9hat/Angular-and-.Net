//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication5.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbDiscShopEntities : DbContext
    {
        public dbDiscShopEntities()
            : base("name=dbDiscShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<disc> discs { get; set; }
        public virtual DbSet<movy> movies { get; set; }
    
        public virtual int proc_insert_disc(Nullable<int> mid, Nullable<double> cost)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_disc", midParameter, costParameter);
        }
    
        public virtual int proc_insert_movie(string name, Nullable<double> dur)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var durParameter = dur.HasValue ?
                new ObjectParameter("dur", dur) :
                new ObjectParameter("dur", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_movie", nameParameter, durParameter);
        }
    }
}
